Parameters:
  AvailabilityZone:
    Description: Select Availability Zone for your EC2 Instance
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1a
  ImageId:
    Description: Enter Image Id
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
  KeyPairName:
    Description: Select key-pair name
    Type: AWS::EC2::KeyPair::KeyName
    Default: my-key-pair

Resources:
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: EC2Policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:Describe
                  - cloudformation:GetTemplate
                  - s3:Get
                  - s3:List
                  - logs:*
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource: "*"
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2Role
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupFromCloudFormation
      GroupDescription: Allows 22, 80 and 8080 ports for inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  EC2InstanceFromCloudFormation:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      ImageId: !Ref ImageId
      InstanceType: t2.micro
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      KeyName: !Ref KeyPairName
      Tags:
        - Key: Name
          Value: aws-deployment
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
  
          # install java and ruby (for codedeploy agent)
          sudo yum update
          sudo yum install -y java-17-amazon-corretto-headless
          sudo yum install -y ruby
  
          # install codedeploy agent
          wget "https://aws-codedeploy-eu-central-1.s3.eu-central-1.amazonaws.com/latest/install"
          chmod +x ./install
          sudo ./install auto
  
          # install Cloudwatch agent
          sudo yum install -y amazon-cloudwatch-agent
          # check Cloudwatch status
          # sudo /bin/systemctl status amazon-cloudwatch-agent --no-pager
  
          # send successful signal to process CreationPolicy
          sudo cfn-signal --exit-code $? --stack ${AWS::StackName} --resource EC2InstanceFromAMI2 --region ${AWS::Region}
          # to list available packages for java use: sudo apt search openjdk 
          # also, please add -y flag to perform YES action on installs